<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/cache http://www.springframework.org/schema/cache/spring-cache.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd http://www.springframework.org/schema/aop https://www.springframework.org/schema/aop/spring-aop.xsd">

    <!-- 包扫描 -->
    <context:component-scan base-package="net.qipo">
    </context:component-scan>

    <!-- 配置数据库,引入外部配置文件 -->
    <context:property-placeholder location="dbConfig.properties"/>

    <bean class="com.mchange.v2.c3p0.ComboPooledDataSource" id="dataSource">
        <property name="user" value="${jdbc.user}"/>
        <property name="password" value="${jdbc.password}"/>
        <property name="jdbcUrl" value="${jdbc.jdbcUrl}"/>
        <property name="driverClass" value="${jdbc.driverClass}"/>
    </bean>

    <!-- 配置jdbcTemplate操作数据库 -->
    <bean class="org.springframework.jdbc.core.JdbcTemplate" id="jdbcTemplate">
        <property name="dataSource" value="#{dataSource}"/>
    </bean>

    <!-- 配置声明式事务
       1. Spring提供了事务管理器(事务切面),配置这个事务管理器;
       2. 开启基于某个注解的声明式事务;依赖tx名称空间;
       3. 给事务方法加注解;
     -->

    <bean class="org.springframework.jdbc.datasource.DataSourceTransactionManager" id="transactionManager">
        <property name="dataSource" value="#{dataSource}"/>
    </bean>

<!--    <tx:annotation-driven transaction-manager="transactionManager"></tx:annotation-driven>-->
    <!-- 基于xml配置的事务:依赖tx名称空间和aop名称空间
        1. Spring提供了事务管理器(事务切面),配置这个事务管理器;
        2. 配置出事务方法;
        3. 告诉Spring哪些方法是事务方法;(事务切面按照我们的切入点表达式去切入事务方法    )
    -->

    <bean class="net.qipo.service.BookService" id="bookService"></bean>

    <aop:config>
        <aop:pointcut id="txPoint" expression="execution(* net.qipo.service.*.*(..))"/>
        <!-- 事务建议;事务增强 advice-ref: 指向事务管理器的配置 -->
        <aop:advisor advice-ref="myAdvice"  pointcut-ref="txPoint"/>
    </aop:config>

    <!-- 配置事务管理器
         transaction-manager: 指定配置哪个事务管理器
     -->
    <tx:advice id="myAdvice" transaction-manager="transactionManager">
        <!-- 事务属性 -->
        <tx:attributes>
            <!-- 指明哪些方法是事务方法 切入点表达式只是说,事务管理器要切入这些方法,哪些方法要加事务是使用tx:method来指定的-->
            <tx:method name="*"/>
            <tx:method name="checkout" timeout="-1" propagation="REQUIRED"/>
        </tx:attributes>
    </tx:advice>

</beans>